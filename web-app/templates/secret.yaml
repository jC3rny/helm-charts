{{- if .Values.imagePullSecrets }}
{{- $url := .Values.imagePullSecrets.url }}
{{- $username := .Values.imagePullSecrets.username }}
{{- $password := .Values.imagePullSecrets.password }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "web-app.containerRegistryName" . }}
  namespace: {{ include "web-app.namespace" . }}
  labels:
    {{- include "web-app.labels" . | nindent 4 }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ printf "{\"auths\": {\"%s\": {\"auth\": \"%s\"}}}" $url (printf "%s:%s" $username $password | b64enc) | b64enc }}
{{- end }}
{{- if and .Values.ingress.tls.enabled .Values.ingress.tls.certificate }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "web-app.tls.secretName" . }}
  namespace: {{ include "web-app.namespace" . }}
  labels:
    {{- include "web-app.labels" . | nindent 4 }}
type: kubernetes.io/tls
stringData:
  tls.crt: |
{{ .Values.ingress.tls.certificate | indent 4 }}
  tls.key: |
{{ .Values.ingress.tls.key | indent 4 }}
{{- end }}
{{- if .Values.envFrom.secret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "web-app.envFrom.secretName" . }}
  namespace: {{ include "web-app.namespace" . }}
  labels:
    {{- include "web-app.labels" . | nindent 4 }}
type: Opaque
{{- if .Values.envFrom.secret }}
stringData:
{{- range $key, $value := .Values.envFrom.secret -}}
  {{ $key | nindent 2 }}: {{ $value | quote }}
{{- end -}}
{{- end }}
{{- end }}
{{- if .Values.envFrom.sealedSecret }}
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: {{ include "web-app.envFrom.sealedSecretName" . }}
  namespace: {{ include "web-app.namespace" . }}
  labels:
    {{- include "web-app.labels" . | nindent 4 }}
  annotations:
    sealedsecrets.bitnami.com/namespace-wide: "true"
spec:
  template:
    type: Opaque
  encryptedData:
  {{- range $key, $value := .Values.envFrom.sealedSecret -}}
    {{ $key | nindent 4 }}: {{ $value | quote }}
  {{- end -}}
{{- end }}