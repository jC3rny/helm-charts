{{- if ne .Values.service.create false }}
{{- with .Values.service }}
apiVersion: v1
kind: Service
metadata:
  {{- if (and .headless (not .clusterIP)) }}
  name: {{ printf "%s-%s" (include "common.serviceName" $) "headless" }}
  {{- else }}
  name: {{ include "common.serviceName" $ }}
  {{- end }}
  namespace: {{ include "common.namespace" $ }}
  labels:
    {{- include "common.labels" $ | nindent 4 }}
  {{- with .annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: {{ .type }}
  {{- if (and (eq .type "ClusterIP") .headless (not .clusterIP)) }}
  clusterIP: "None"
  {{- else if .clusterIP }}
  clusterIP: {{ .clusterIP }}
  {{- end }}
  {{- if (and (eq .type "LoadBalancer") .loadBalancerIP) }}
  loadBalancerIP: {{ .loadBalancerIP }}
  {{- end }}
  {{- with .externalName }}
  externalName: {{ . }}
  {{- end }}
  {{- with .externalTrafficPolicy }}
  externalTrafficPolicy: {{ . }}
  {{- end }}
  {{- if .subsets }}
  subsets:
    {{- toYaml .subsets | nindent 4 }}
  {{- else }}
  selector:
    {{- include "common.selectorLabels" $ | nindent 4 }}
  {{- end }}
  ports:
    - name: {{ .portName }}
      port: {{ .portNumber }}
      targetPort: {{ (eq (.containerPort | toString) "None") | ternary .portNumber (default .portNumber .containerPort) }}
      protocol: {{ default "TCP" .protocol }}
    {{- range .additionalPorts }}
    - name: {{ .name }}
      port: {{ .port }}
      targetPort: {{ default .port .containerPort }}
      protocol: {{ default "TCP" .protocol }}
    {{- end }}
{{- end }}
{{- range .Values.service.additionalServices }}
{{- $serviceName := .name }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-%s" (include "common.serviceName" $) (required "key .name is missing" $serviceName) }}
  namespace: {{ include "common.namespace" $ }}
  labels:
    {{- include "common.labels" $ | nindent 4 }}
  {{- with .annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if hasKey . "spec" }}
  {{- toYaml .spec | nindent 2 }}
  {{- if not (hasKey .spec "selector") }}
  selector:
    {{- include "common.selectorLabels" $ | nindent 4 }}
  {{- end }}
  {{- else }}
  type: ClusterIP
  selector:
    {{- include "common.selectorLabels" $ | nindent 4 }}
  {{- end }}
  {{- range .ports }}
  ports:
    - name: {{ default $serviceName .name }}
      port: {{ .port }}
      targetPort: {{ default .port .containerPort }}
      protocol: {{ default "TCP" .protocol }}
  {{- end }}
{{- end }}
{{- end }}


{{- if and .Values.metrics.enabled .Values.metrics.serviceMonitor.create }}
{{- $labels := mergeOverwrite (include "common.labels" $ | fromYaml) (dict "app.kubernetes.io/component" "metrics") }}
{{- with .Values.metrics }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-metrics" (include "common.fullname" $) }}
  namespace: {{ include "common.namespace" $ }}
  labels:
    {{- $labels | toYaml | nindent 4 }}
spec:
  type: ClusterIP
  selector:
    {{- include "common.selectorLabels" $ | nindent 4 }}
  ports:
    - name: {{ .portName }}
      port: {{ .portNumber }}
      targetPort: {{ default .portNumber .containerPort }}
      protocol: {{ .protocol }}
{{- end }}
{{- end }}
